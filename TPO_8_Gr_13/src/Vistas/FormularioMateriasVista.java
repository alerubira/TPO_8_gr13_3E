/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import javax.swing.JOptionPane;
import src.Data.MateriaData;
import src.Entidades.Materia;

/**
 *
 * @author EQUIPO
 */
public class FormularioMateriasVista extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormularioMatariasVista
     */
    public FormularioMateriasVista() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jbLimpiar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jtxtCodigo = new javax.swing.JTextField();
        jtxtNombre = new javax.swing.JTextField();
        jtxtAño = new javax.swing.JTextField();
        jcbEstado = new javax.swing.JCheckBox();
        jlSalir = new javax.swing.JButton();

        jLabel1.setText("Código");

        jLabel2.setText("Nombre");

        jLabel3.setText("Año");

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbActualizar.setText("Actualizar");
        jbActualizar.setEnabled(false);
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbBorrar.setText("Borrar");
        jbBorrar.setEnabled(false);
        jbBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBorrarActionPerformed(evt);
            }
        });

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("-MATERIAS-");

        jcbEstado.setText("Estado");

        jlSalir.setText("Exit");
        jlSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(37, 37, 37))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbBorrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscar)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbActualizar)
                                        .addGap(1, 1, 1)
                                        .addComponent(jbLimpiar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jlSalir))
                                    .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxtAño, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(139, 139, 139))))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jcbEstado)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jbBuscar)
                    .addComponent(jtxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtAño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jcbEstado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbLimpiar)
                        .addComponent(jbActualizar)
                        .addComponent(jbBorrar)
                        .addComponent(jbGuardar))
                    .addComponent(jlSalir, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        jbActualizar.setEnabled(true);
        jbBorrar.setEnabled(true);
        if (jtxtCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Codigo VACIO!!", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtCodigo.requestFocus();
        } else if (!validarNum(jtxtCodigo.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Dato Codigo incorrecto >> Intente nuevamente...", "Error!", JOptionPane.ERROR_MESSAGE);
            jtxtCodigo.requestFocus();
            jtxtCodigo.setText("");
        } else {
            try {
                MateriaData materiaData = new MateriaData();
                int id = Integer.parseInt(jtxtCodigo.getText());
                Materia materia = materiaData.buscarMateria(id);
                jtxtNombre.setText(materia.getNombre());
                jtxtAño.setText(materia.getAnio() + "");
                jcbEstado.setSelected(materia.isEstado());
            } catch (Exception e) {

            }
        }

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if (jtxtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Nombre VACIO!!", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtCodigo.requestFocus();
        } else if (!validarNomAp(jtxtNombre.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Dato Nombre incorrecto >> Intente nuevamente...", "Error!", JOptionPane.ERROR_MESSAGE);
            jtxtCodigo.requestFocus();
            jtxtCodigo.setText("");
        } else if (jtxtAño.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Año VACIO!!", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtCodigo.requestFocus();
        } else if (!validarNum(jtxtAño.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Dato Año incorrecto >> Intente nuevamente...", "Error!", JOptionPane.ERROR_MESSAGE);
            jtxtCodigo.requestFocus();
            jtxtCodigo.setText("");
        } else {
            try {
                MateriaData materiaData = new MateriaData();
                Materia materia = new Materia();
                materia.setNombre(jtxtNombre.getText());
                materia.setAnio(Integer.parseInt(jtxtAño.getText()));
                materia.setEstado(jcbEstado.isSelected());
                materiaData.guardarMateria(materia);
                limpiar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Materia no agregada...", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
        if (jtxtCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Codigo no puede estar VACIO...", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtCodigo.requestFocus();
        } else if (!validarNum(jtxtCodigo.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Dato Codigo incorrecto >> Intente nuevamente...", "Error!", JOptionPane.ERROR_MESSAGE);
            jtxtCodigo.requestFocus();
            jtxtCodigo.setText("");
        } else if (jtxtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Nombre VACIO!!", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtNombre.requestFocus();
        } else if (!validarNomAp(jtxtNombre.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Dato Nombre incorrecto >> Intente nuevamente...", "Error!", JOptionPane.ERROR_MESSAGE);
            jtxtNombre.requestFocus();
            jtxtNombre.setText("");
        } else if (jtxtAño.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Campo Año VACIO!!", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtAño.requestFocus();
        } else if (!validarNum(jtxtAño.getText().trim())) {
            JOptionPane.showMessageDialog(this, "Dato Año incorrecto >> Intente nuevamente...", "Error!", JOptionPane.ERROR_MESSAGE);
            jtxtAño.requestFocus();
            jtxtAño.setText("");
        } else {
            try {
                MateriaData materiaData = new MateriaData();
                Materia materia = new Materia();
                materia.setId_Materia(Integer.parseInt(jtxtCodigo.getText()));
                materia.setNombre(jtxtNombre.getText());
                materia.setAnio(Integer.parseInt(jtxtAño.getText()));
                materia.setEstado(jcbEstado.isSelected());
                materiaData.modificarMateria(materia);
                limpiar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Materia no actualizada...", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBorrarActionPerformed
        if (jtxtCodigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Id Obligatorio", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            jtxtCodigo.requestFocus();
        } else {
            try {
                MateriaData materiaData = new MateriaData();
                int id = Integer.parseInt(jtxtCodigo.getText());
                materiaData.eliminarMateria(id);
                limpiar();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Materia no eliminada...", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jbBorrarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        jtxtNombre.setText("");
        jtxtAño.setText("");
        jcbEstado.setSelected(false);
        jtxtCodigo.setText("");
        jbActualizar.setEnabled(false);
        jbBorrar.setEnabled(false);
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jlSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlSalirActionPerformed
        dispose();
    }//GEN-LAST:event_jlSalirActionPerformed
    public static boolean validarNum(String num) {
        return num.matches("[0-9]*");
    }

    public static boolean validarNomAp(String nomAp) {
        return nomAp.matches("[a-z A-Z]*");
    }

    private void limpiar() {
        jtxtCodigo.setText("");
        jtxtNombre.setText("");
        jcbEstado.setSelected(false);
        jtxtAño.setText("");

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JCheckBox jcbEstado;
    private javax.swing.JButton jlSalir;
    private javax.swing.JTextField jtxtAño;
    private javax.swing.JTextField jtxtCodigo;
    private javax.swing.JTextField jtxtNombre;
    // End of variables declaration//GEN-END:variables
}
